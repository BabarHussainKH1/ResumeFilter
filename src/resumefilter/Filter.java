/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package resumefilter;

import java.awt.Color;
import java.util.List;
import java.awt.event.KeyEvent;
import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.nio.file.StandardCopyOption;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collection;
import java.util.Collections;
import java.util.HashMap;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Pattern;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import org.apache.pdfbox.pdmodel.PDDocument;
import org.apache.pdfbox.text.PDFTextStripper;

/**
 *
 * @author BHussain.22048
 */
public class Filter extends javax.swing.JFrame {

    /**
     * Creates new form Fitler
     */
    public Filter() {
        initComponents();
        getContentPane().setBackground(Color.white);

    }

    public static List<String> findFiles(Path path, String[] fileExtensions) throws IOException {

        if (!Files.isDirectory(path)) {
            throw new IllegalArgumentException("Path must be a directory!");
        }

        List<String> result;
        try (Stream<Path> walk = Files.walk(path, 1)) {
            result = walk
                    .filter(p -> !Files.isDirectory(p))
                    // convert path to string
                    .map(p -> p.toString().toLowerCase())
                    .filter(f -> isEndWith(f, fileExtensions))
                    .collect(Collectors.toList());
        }
        return result;

    }

    private static boolean isEndWith(String file, String[] fileExtensions) {
        boolean result = false;
        for (String fileExtension : fileExtensions) {
            if (file.endsWith(fileExtension)) {
                result = true;
                break;
            }
        }
        return result;
    }

    public void readFiles() {

        String location = resumeLocation.getText();
        if (!location.isEmpty()) {

//            try (PDDocument document = PDDocument.load(new File(location))) {
//
//                document.getClass();
//
//                if (!document.isEncrypted()) {
//
//                    PDFTextStripperByArea stripper = new PDFTextStripperByArea();
//                    stripper.setSortByPosition(true);
//
//                    PDFTextStripper tStripper = new PDFTextStripper();
//                    String pdfFileInText = tStripper.getText(document);
//
//                    // split by whitespace
//                    String lines[] = pdfFileInText.split("\\r?\\n");
//                    for (String line : lines) {
//                        System.out.println(line);
//                    }
//
//                }
//
//            } catch (IOException ex) {
//                Logger.getLogger(Filter.class.getName()).log(Level.SEVERE, null, ex);
//            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        languageField = new javax.swing.JTextField();
        label1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        resumeLocation = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        languesList = new javax.swing.JTextArea();
        jLabel7 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        matchAnyBox = new javax.swing.JCheckBox();
        label2 = new javax.swing.JLabel();
        machesFoundLabel = new javax.swing.JLabel();
        label3 = new javax.swing.JLabel();
        expComboBox = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        foundLocationField = new javax.swing.JTextField();
        editfoundLocationField = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanel1.setForeground(new java.awt.Color(255, 255, 255));

        languageField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                languageFieldActionPerformed(evt);
            }
        });
        languageField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                languageFieldKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                languageFieldKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                languageFieldKeyTyped(evt);
            }
        });

        label1.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        label1.setText("Search Location");

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/media/change.png"))); // NOI18N
        jLabel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel3MouseClicked(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jLabel4.setText("Languages and Tools");

        resumeLocation.setForeground(new java.awt.Color(102, 102, 102));
        resumeLocation.setText("D:\\BAHL Projects\\Resume 2022");

        languesList.setEditable(false);
        languesList.setColumns(20);
        languesList.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        languesList.setLineWrap(true);
        languesList.setRows(5);
        jScrollPane1.setViewportView(languesList);

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/media/trash.png"))); // NOI18N
        jLabel7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel7MouseClicked(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jButton1.setText("Filter");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        matchAnyBox.setFont(new java.awt.Font("Calibri", 0, 11)); // NOI18N
        matchAnyBox.setText("Match Any");

        label2.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        label2.setText("Matches Found");

        machesFoundLabel.setFont(new java.awt.Font("Arial", 1, 48)); // NOI18N
        machesFoundLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        machesFoundLabel.setText("-");

        label3.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        label3.setText("Location :");

        expComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1 yrs", "1.5 yrs", "2 yrs", "2.5 yrs", "3 yrs", "3.5 yrs", "4 yrs", "4.5 yrs", "5 yrs", "5.5 yrs", "6 yrs", "6.5 yrs", "7 yrs", "7.5 yrs", "8 yrs", "8.5 yrs", "9 yrs", "9.5", "10 yrs", " " }));

        jLabel6.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jLabel6.setText("Experience");

        foundLocationField.setEditable(false);

        editfoundLocationField.setIcon(new javax.swing.ImageIcon(getClass().getResource("/media/edit-53-32.png"))); // NOI18N
        editfoundLocationField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                editfoundLocationFieldMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(resumeLocation, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(238, 238, 238))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel3))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 292, Short.MAX_VALUE)
                                    .addComponent(languageField, javax.swing.GroupLayout.Alignment.LEADING))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel7)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(label2))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(expComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                                .addComponent(matchAnyBox, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 8, Short.MAX_VALUE)))
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(144, 144, 144))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                                .addComponent(machesFoundLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(23, 23, 23))))))
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(63, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(label3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(foundLocationField, javax.swing.GroupLayout.PREFERRED_SIZE, 374, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(editfoundLocationField, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(label1)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(7, 7, 7)
                .addComponent(resumeLocation)
                .addGap(21, 21, 21)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel6)
                    .addComponent(label2))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(languageField, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(expComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(matchAnyBox)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(machesFoundLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(label3))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(editfoundLocationField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(foundLocationField))))
                .addGap(0, 25, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(0, 102, 0));

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 25)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText(" Resume Searcher");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 633, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MouseClicked
        JFileChooser chooser = new JFileChooser();
        chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        chooser.setCurrentDirectory(new java.io.File("D:\\"));
        chooser.setDialogTitle("Select Resume Directory");
        if (chooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            resumeLocation.setText(chooser.getSelectedFile().getAbsolutePath());

        }


    }//GEN-LAST:event_jLabel3MouseClicked

    private void languageFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_languageFieldActionPerformed

    }//GEN-LAST:event_languageFieldActionPerformed

    private void languageFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_languageFieldKeyPressed

    }//GEN-LAST:event_languageFieldKeyPressed

    private void languageFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_languageFieldKeyTyped
    }//GEN-LAST:event_languageFieldKeyTyped

    private void languageFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_languageFieldKeyReleased

        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            String lang = languageField.getText();
            System.out.println("#" + lang);
            if (lang.trim().length() > 0) {
                languesList.setText(new StringBuffer(languesList.getText()).append(lang).append(", ").toString());
                languageField.setText("");
            }
//
        }

    }//GEN-LAST:event_languageFieldKeyReleased

    private void jLabel7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel7MouseClicked
        languesList.setText("");
    }//GEN-LAST:event_jLabel7MouseClicked

    public Map<String, Boolean> getList(String list[]) {
        Map<String, Boolean> map = new HashMap<String, Boolean>();
        for (String l : list) {
            map.put(l, false);
        }
        return map;
    }

    int matchesFound = 0;
    File directory;
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        matchesFound = 0;
        String location = resumeLocation.getText();
        String languages = languesList.getText().trim().toLowerCase();
        String langList[] = languages.length() > 0 ? languages.split(",") : null;
        if (!location.isEmpty()) {
            if (langList != null && langList.length > 0) {
                try {
                    String[] extensions = {"pdf", "docx", "doc"};
                    List<String> files = findFiles(Paths.get(location), extensions);
                    files.forEach(x -> {
                        System.out.println("Resume: " + x);
                        try {
                            PDDocument doc = PDDocument.load(new File(x));
                            String data = new PDFTextStripper().getText(doc);

                            boolean flag = true;
                            boolean matchAny = matchAnyBox.isSelected();
                            List matchAnyFolder = new ArrayList();
                            for (String keyword : langList) {

                                System.out.println("Keyword: " + keyword);

//                                if (!data.toLowerCase().contains(keyword)) {
//                                    flag = false;
//                                }
                                System.out.println(data);
                                if (isKeywordFound(data, keyword)) {
                                    System.out.println("MATCH Found");
                                    flag = false;
                                } else {
                                    System.out.println("Not found");
                                }

                                if (matchAny) {
                                    matchAnyFolder.add(keyword);

                                }
                                System.out.println("keyword : " + keyword);
                                System.out.println("keyword : " + keyword.length());
                            }

                            doc.close();

                            System.out.println("flag : " + flag);
                            if (flag || matchAny) {
                                System.out.println("File to move: " + x);
                                Arrays.sort(langList);
                                String folderName = String.join("-", Arrays.asList(langList));
                                if (matchAny) {
                                    Collections.sort(matchAnyFolder);
                                    folderName = String.join("-", matchAnyFolder);

                                }
                                directory = new File("D:\\BAHL Projects\\Filtered\\" + folderName);
                                System.out.println("dir " + directory);
                                if (!directory.exists()) {
                                    directory.mkdirs();
                                    System.out.println("created");
                                }

                                // Files.move(Paths.get(x), Paths.get(directory + "\\" + new File(x).getName()), StandardCopyOption.REPLACE_EXISTING);
                                matchesFound++;
                            }
                        } catch (IOException ex) {
                            ex.printStackTrace();
                        }

                    });

                    machesFoundLabel.setText("" + matchesFound);

                    if (matchesFound > 0) {
                        foundLocationField.setText(directory.getAbsolutePath());
                        machesFoundLabel.setForeground(Color.black);

                    } else {
                        System.out.println("No any matches found");
                        foundLocationField.setText("");
                        machesFoundLabel.setForeground(Color.RED);
                        message("Matches", "No any math found!");

                    }

                } catch (IOException e) {
                    e.printStackTrace();
                }
            } else {
                message("Resume Lang & Tools", "Please enter Languages  or Tools first");

            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    public boolean isKeywordFound(String text, String word) {
        String REGEX_FIND_WORD = "(?i).*?\\b%s\\b.*?";
        String regex = String.format(REGEX_FIND_WORD, Pattern.quote(word));
        return text.matches(regex);
    }


    private void editfoundLocationFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_editfoundLocationFieldMouseClicked
        if (!foundLocationField.getText().isEmpty()) {
            JFileChooser chooser = new JFileChooser();
            chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
            chooser.setCurrentDirectory(new java.io.File(foundLocationField.getText()));
            chooser.setDialogTitle("Select Location to save Filterd Resumes");
            chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
            if (chooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
                foundLocationField.setText(chooser.getSelectedFile().getAbsolutePath());
            }
        }


    }//GEN-LAST:event_editfoundLocationFieldMouseClicked

    public void message(String title, String message) {
        JOptionPane.showMessageDialog(null, message, title, JOptionPane.INFORMATION_MESSAGE);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Filter.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Filter.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Filter.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Filter.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Filter().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel editfoundLocationField;
    private javax.swing.JComboBox<String> expComboBox;
    private javax.swing.JTextField foundLocationField;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel label1;
    private javax.swing.JLabel label2;
    private javax.swing.JLabel label3;
    private javax.swing.JTextField languageField;
    private javax.swing.JTextArea languesList;
    private javax.swing.JLabel machesFoundLabel;
    private javax.swing.JCheckBox matchAnyBox;
    private javax.swing.JLabel resumeLocation;
    // End of variables declaration//GEN-END:variables
}
